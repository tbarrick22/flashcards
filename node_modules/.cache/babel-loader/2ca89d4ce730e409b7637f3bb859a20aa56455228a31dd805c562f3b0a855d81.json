{"ast":null,"code":"var _jsxFileName = \"/Users/timothybarrick/Desktop/projects/flashcards/src/components/NewQuizForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ROUTES from \"../app/routes\";\n// import selectors\nimport { selectTopics } from \"../features/topics/topicsSlice\";\nimport { addQuiz } from \"../features/quizzes/quizzesSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewQuizForm() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [cards, setCards] = useState([]);\n  const [topicId, setTopicId] = useState(\"\");\n  const navigate = useNavigate();\n  const topics = useSelector(selectTopics); // Replace with topics\n  const dispatch = useDispatch();\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (name.length === 0) {\n      return;\n    }\n    const cardIds = [];\n\n    // create the new cards here and add each card's id to cardIds\n    // create the new quiz here\n    const newQuiz = {\n      id: uuidv4(),\n      name,\n      topicId,\n      cardIds\n    };\n\n    // dispatch add quiz action\n    dispatch(addQuiz(newQuiz));\n    navigate(ROUTES.quizzesRoute());\n  };\n  const addCardInputs = e => {\n    e.preventDefault();\n    setCards(cards.concat({\n      front: \"\",\n      back: \"\"\n    }));\n  };\n  const removeCard = (e, index) => {\n    e.preventDefault();\n    setCards(cards.filter((card, i) => index !== i));\n  };\n  const updateCardState = (index, side, value) => {\n    const newCards = cards.slice();\n    newCards[index][side] = value;\n    setCards(newCards);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create a new quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"quiz-name\",\n        value: name,\n        onChange: e => setName(e.currentTarget.value),\n        placeholder: \"Quiz Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"quiz-topic\",\n        onChange: e => setTopicId(e.currentTarget.value),\n        placeholder: \"Topic\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Topic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 6\n        }, this), Object.values(topics).map(topic => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: topic.id,\n          children: topic.name\n        }, topic.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 7\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), cards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-front-back\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: `card-front-${index}`,\n          value: cards[index].front,\n          onChange: e => updateCardState(index, \"front\", e.currentTarget.value),\n          placeholder: \"Front\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: `card-back-${index}`,\n          value: cards[index].back,\n          onChange: e => updateCardState(index, \"back\", e.currentTarget.value),\n          placeholder: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => removeCard(e, index),\n          className: \"remove-card-button\",\n          children: \"Remove Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 7\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 6\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addCardInputs,\n          children: \"Add a Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 3\n  }, this);\n}\n_s(NewQuizForm, \"m0vMFlwVka2q8yLxoiY9z9znCaU=\", false, function () {\n  return [useNavigate, useSelector, useDispatch];\n});\n_c = NewQuizForm;\nvar _c;\n$RefreshReg$(_c, \"NewQuizForm\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","useNavigate","v4","uuidv4","ROUTES","selectTopics","addQuiz","jsxDEV","_jsxDEV","NewQuizForm","_s","name","setName","cards","setCards","topicId","setTopicId","navigate","topics","dispatch","handleSubmit","e","preventDefault","length","cardIds","newQuiz","id","quizzesRoute","addCardInputs","concat","front","back","removeCard","index","filter","card","i","updateCardState","side","value","newCards","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","currentTarget","placeholder","Object","values","map","topic","className","onClick","type","_c","$RefreshReg$"],"sources":["/Users/timothybarrick/Desktop/projects/flashcards/src/components/NewQuizForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ROUTES from \"../app/routes\";\n// import selectors\nimport { selectTopics } from \"../features/topics/topicsSlice\";\nimport { addQuiz } from \"../features/quizzes/quizzesSlice\";\n\nexport default function NewQuizForm() {\n\tconst [name, setName] = useState(\"\");\n\tconst [cards, setCards] = useState([]);\n\tconst [topicId, setTopicId] = useState(\"\");\n\tconst navigate = useNavigate();\n\tconst topics = useSelector(selectTopics); // Replace with topics\n\tconst dispatch = useDispatch();\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tif (name.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst cardIds = [];\n\n\t\t// create the new cards here and add each card's id to cardIds\n\t\t// create the new quiz here\n\t\tconst newQuiz = {\n\t\t\tid: uuidv4(),\n\t\t\tname,\n\t\t\ttopicId,\n\t\t\tcardIds,\n\t\t};\n\n\t\t// dispatch add quiz action\n\t\tdispatch(addQuiz(newQuiz));\n\n\t\tnavigate(ROUTES.quizzesRoute());\n\t};\n\n\tconst addCardInputs = (e) => {\n\t\te.preventDefault();\n\t\tsetCards(cards.concat({ front: \"\", back: \"\" }));\n\t};\n\n\tconst removeCard = (e, index) => {\n\t\te.preventDefault();\n\t\tsetCards(cards.filter((card, i) => index !== i));\n\t};\n\n\tconst updateCardState = (index, side, value) => {\n\t\tconst newCards = cards.slice();\n\t\tnewCards[index][side] = value;\n\t\tsetCards(newCards);\n\t};\n\n\treturn (\n\t\t<section>\n\t\t\t<h1>Create a new quiz</h1>\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<input\n\t\t\t\t\tid=\"quiz-name\"\n\t\t\t\t\tvalue={name}\n\t\t\t\t\tonChange={(e) => setName(e.currentTarget.value)}\n\t\t\t\t\tplaceholder=\"Quiz Title\"\n\t\t\t\t/>\n\t\t\t\t<select\n\t\t\t\t\tid=\"quiz-topic\"\n\t\t\t\t\tonChange={(e) => setTopicId(e.currentTarget.value)}\n\t\t\t\t\tplaceholder=\"Topic\"\n\t\t\t\t>\n\t\t\t\t\t<option value=\"\">Topic</option>\n\t\t\t\t\t{Object.values(topics).map((topic) => (\n\t\t\t\t\t\t<option key={topic.id} value={topic.id}>\n\t\t\t\t\t\t\t{topic.name}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t))}\n\t\t\t\t</select>\n\t\t\t\t{cards.map((card, index) => (\n\t\t\t\t\t<div key={index} className=\"card-front-back\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid={`card-front-${index}`}\n\t\t\t\t\t\t\tvalue={cards[index].front}\n\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\tupdateCardState(\n\t\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\t\t\"front\",\n\t\t\t\t\t\t\t\t\te.currentTarget.value\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tplaceholder=\"Front\"\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid={`card-back-${index}`}\n\t\t\t\t\t\t\tvalue={cards[index].back}\n\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\tupdateCardState(\n\t\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\t\t\"back\",\n\t\t\t\t\t\t\t\t\te.currentTarget.value\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tplaceholder=\"Back\"\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tonClick={(e) => removeCard(e, index)}\n\t\t\t\t\t\t\tclassName=\"remove-card-button\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRemove Card\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t\t<div className=\"actions-container\">\n\t\t\t\t\t<button onClick={addCardInputs}>Add a Card</button>\n\t\t\t\t\t<button type=\"submit\">Create Quiz</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</section>\n\t);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}